var express = require('express');
var router = express.Router();
var chai = require('chai');
var chaiHttp = require('chai-http');
var assert = chai.assert;
var Users = require('../lib/Users.js');
var Helpers = require('./Helpers.js');
var Nodes = require('../lib/Nodes.js');
var AWS = require('aws-sdk');
AWS.config.loadFromPath('./config.json');
Joi    = require('joi');
AWS.config.apiVersions = {
  //dynamodb: '2011-12-05',
  //ec2: '2013-02-01',
  dynamodb: 'latest'
}
var db = new AWS.DynamoDB();

chai.use(chaiHttp);

var unverifiedUser;
var baseUrl = process.env.BASEURL;

router.post('/users', function(req, res){

    var createPayload = {
        logins: [
            {
            email: 'nodeTest@synapsepay.com',
            password: 'test1234',
            read_only: false
            }
        ],
        phone_numbers: [
            '901.111.1111'
        ],
        legal_names: [
            'NODE TEST USER'
        ],
        extra: {
            note: 'Interesting user',
            supp_id: '122eddfgbeafrfvbbb',
            is_business: false
        }
    };
    Users.create(
        Helpers.client,
        Helpers.fingerprint,
        Helpers.ip_address,
        createPayload,
        function(err, user) {
             res.send(user);        
        });

});
router.get('/users', function(req, res){

        let options = {
            ip_address: Helpers.ip_address,
            page: '', //optional
            per_page: '', //optional
            query: '' //optional
        };
        Users.get(
        Helpers.client,
        options,
        function(err, usersResponse) {
            // error or array of user objects
            res.send(usersResponse);
        });
});

router.get('/users/:id', function(req, res){

       let options = {
        _id: req.params.id,
        fingerprint: Helpers.fingerprint,
        ip_address: '127.0.0.1',
        full_dehydrate: 'yes' //optional
    };
    let user;
    Users.get(
    Helpers.client,
    options,
    function(errResp, userResponse) {
          // error or user object
        
        if(errResp){
            res.send("err");
        }else{
             user = userResponse;
             res.send(user);
        }
       
    });
});

router.get('/nodes/:id', function(req, res){
        
    let options = {
        _id: req.params.id,
        fingerprint: Helpers.fingerprint,
        ip_address: '127.0.0.1',
        full_dehydrate: 'yes' //optional
    };
    let user;
    Users.get(
    Helpers.client,
    options,
    function(errResp, userResponse) {
          // error or user object
        
        if(errResp){
            res.send("user err");
        }else{
             user = userResponse;           
              Nodes.get(       
                    user,
                    null,
                    function(err, nodesResponse) {
                        // error or array of node objects
                        res.send(nodesResponse);
                    });
             }
       
    });
   
});

router.post('/test', function(req, res){
    /*db.listTables(function(err, data) {
      console.log(data.TableNames);
      res.send(data.TableNames);
    });*/
  var params = {
    TableName : "Users",
    KeySchema: [       
        { AttributeName: "user_ID", KeyType: "HASH"},  
        { AttributeName: "email", KeyType: "RANGE" }
    ],
    AttributeDefinitions: [       
        { AttributeName: "user_ID", AttributeType: "N" },
        { AttributeName: "email", AttributeType: "S" }
    ],
    ProvisionedThroughput: {       
        ReadCapacityUnits: 10, 
        WriteCapacityUnits: 10
    }
};

db.createTable(params, function(err, data) {
    if (err) {
        res.send(err);
    } else {
        res.send('ok');
    }
});

});


router.get('/login', function(req, res){
    var tableName = "Users";
    var params = {    
                TableName : tableName,
                Key : { "user_ID" : {'N':1}}
        };
    db.getItem(params, function(err, data){
             res.send(err);
    })
    
});

router.post('/signup', function(req, res){
    var tableName = "Users";
    var id = new Date().getTime().toString();
    var item = {
            'user_ID':{'S':id},
            'email': {'S': "test6@gmail.com"},
            'name': {'S': 'test'},
            'preview': {'S': 'test'},
            'theme': {'S': 'test'}
             
        };

        db.putItem({
            'TableName':tableName,
            'Item':item,
            'Expected' : { email : { Exists : false }}
        }, function(err, data){
             res.send(err);
        });
   
});

router.get('/profile', function(req, res){
    res.send();
});
router.get('/', function(req, res){
    res.send('API RUNNING');
});
module.exports = router;
/*
function getUser(userID){
   let options = {
            ip_address: Helpers.ip_address,
            page: '', //optional
            per_page: '', //optional
            query: '' //optional
        };console.log(userID);
        Users.get(
        Helpers.client,
        options,
        function(err, usersResponse) {
            // error or array of user objects
           return usersResponse;
        });
    
}*/